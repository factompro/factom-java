/*
 * Factom PRO API
 * Factom PRO is a cloud blockchain gateway for securing your business data. Store data on the Bitcoin and Ethereum blockchains at a low fixed price of $0.01 per write. No cryptocurrency. No nodes.
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@factom.pro
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ExtIds;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.InlineResponse400;
import io.swagger.client.model.InlineResponse401;
import io.swagger.client.model.InlineResponse500;
import io.swagger.client.model.NewChain;
import io.swagger.client.model.SearchExtIds;
import io.swagger.client.model.SortParams;
import io.swagger.client.model.StatusParams;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChainsApi
 */
@Ignore
public class ChainsApiTest {

    private final ChainsApi api = new ChainsApi();

    /**
     * Create chain
     *
     * This endpoint allows you to create new chain on the Factom blockchain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createChainTest() throws ApiException {
        NewChain body = null;
        String callbackUrl = null;
        InlineResponse2003 response = api.createChain(body, callbackUrl);

        // TODO: test validations
    }
    /**
     * Get chain
     *
     * This endpoint returns Factom chain by Chain ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChainTest() throws ApiException {
        String chainId = null;
        InlineResponse2004 response = api.getChain(chainId);

        // TODO: test validations
    }
    /**
     * Get chain entries
     *
     * This endpoint returns entries of Factom chain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChainEntriesTest() throws ApiException {
        String chainId = null;
        Integer start = null;
        Integer limit = null;
        StatusParams status = null;
        SortParams sort = null;
        InlineResponse2005 response = api.getChainEntries(chainId, start, limit, status, sort);

        // TODO: test validations
    }
    /**
     * Get first entry of the chain
     *
     * This endpoint returns first entry of chain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChainFirstEntryTest() throws ApiException {
        String chainId = null;
        InlineResponse2006 response = api.getChainFirstEntry(chainId);

        // TODO: test validations
    }
    /**
     * Get last entry of the chain
     *
     * This endpoint returns last entry of chain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChainLastEntryTest() throws ApiException {
        String chainId = null;
        InlineResponse2006 response = api.getChainLastEntry(chainId);

        // TODO: test validations
    }
    /**
     * Get user&#x27;s chains
     *
     * This endpoint returns all chains, with that API user works.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserChainsTest() throws ApiException {
        Integer all = null;
        Integer start = null;
        Integer limit = null;
        StatusParams status = null;
        SortParams sort = null;
        InlineResponse2002 response = api.getUserChains(all, start, limit, status, sort);

        // TODO: test validations
    }
    /**
     * Search chain entries
     *
     * This endpoint allows you to search among entries of the chain by one or multiple external IDs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchChainEntriesTest() throws ApiException {
        SearchExtIds body = null;
        String chainId = null;
        Integer start = null;
        Integer limit = null;
        StatusParams status = null;
        SortParams sort = null;
        InlineResponse2005 response = api.searchChainEntries(body, chainId, start, limit, status, sort);

        // TODO: test validations
    }
    /**
     * Search user&#x27;s chains
     *
     * This endpoint allows you to search among user&#x27;s chains by one or multiple external IDs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchUserChainsTest() throws ApiException {
        SearchExtIds body = null;
        Integer all = null;
        Integer start = null;
        Integer limit = null;
        StatusParams status = null;
        SortParams sort = null;
        InlineResponse2002 response = api.searchUserChains(body, all, start, limit, status, sort);

        // TODO: test validations
    }
}
