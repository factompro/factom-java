/*
 * Factom PRO API
 * Factom PRO is a cloud blockchain gateway for securing your business data. Store data on the Bitcoin and Ethereum blockchains at a low fixed price of $0.01 per write. No cryptocurrency. No nodes.
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@factom.pro
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * User
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-30T15:28:24.262574+02:00[Europe/Madrid]")
public class User {
  @SerializedName("name")
  private String name = null;

  @SerializedName("accessToken")
  private String accessToken = null;

  @SerializedName("usage")
  private Integer usage = null;

  @SerializedName("usageLimit")
  private Integer usageLimit = null;

  public User name(String name) {
    this.name = name;
    return this;
  }

   /**
   * User name
   * @return name
  **/
  @Schema(example = "John", description = "User name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public User accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * API access token
   * @return accessToken
  **/
  @Schema(example = "7eolpbo2WOaxZ8F06bMJxacqJsiLVQoZ", description = "API access token")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public User usage(Integer usage) {
    this.usage = usage;
    return this;
  }

   /**
   * Number of writes made
   * @return usage
  **/
  @Schema(example = "1027", description = "Number of writes made")
  public Integer getUsage() {
    return usage;
  }

  public void setUsage(Integer usage) {
    this.usage = usage;
  }

  public User usageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
    return this;
  }

   /**
   * Writes limit
   * @return usageLimit
  **/
  @Schema(example = "5000", description = "Writes limit")
  public Integer getUsageLimit() {
    return usageLimit;
  }

  public void setUsageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.name, user.name) &&
        Objects.equals(this.accessToken, user.accessToken) &&
        Objects.equals(this.usage, user.usage) &&
        Objects.equals(this.usageLimit, user.usageLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, accessToken, usage, usageLimit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    usageLimit: ").append(toIndentedString(usageLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
